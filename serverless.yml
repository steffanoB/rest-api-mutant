service: dynamodb-crud-api

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: sa-east-1
  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.geneticCodesTableName}

custom:
  geneticCodesTableName: geneticCodes-table-${self:provider.stage}

plugins:
  - serverless-iam-roles-per-function
functions:
  getGeneticCode:
    handler: api.getGeneticCode
    name: get-geneticCode
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: mutant/{geneticCode}
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
        Resource: !GetAtt GeneticCodesTable.Arn
  createGeneticCodee:
    handler: api.createGeneticCode
    name: create-GeneticCode
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: mutant
          method: POST
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource: !GetAtt GeneticCodesTable.Arn
  updateGeneticCode:
    handler: api.updateGeneticCode
    name: update-geneticCode
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: mutant/{geneticCode}
          method: PUT
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:UpdateItem"
        Resource: !GetAtt GeneticCodesTable.Arn
  deleteGeneticCode:
    handler: api.deleteGeneticCode
    name: delete-geneticCode
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: mutant/{geneticCode}
          method: DELETE
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:DeleteItem"
        Resource: !GetAtt GeneticCodesTable.Arn
  getAllGeneticCodes:
    handler: api.getAllGeneticCodes
    name: get-all-geneticCodes
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: mutants
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resource: !GetAtt GeneticCodesTable.Arn

resources:
  Resources:
    GeneticCodesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.geneticCodesTableName}
        AttributeDefinitions:
          - AttributeName: geneticSequence
            AttributeType: S
        KeySchema:
          - AttributeName: geneticSequence
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
